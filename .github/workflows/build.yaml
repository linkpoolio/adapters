name: Build

on:
  pull_request: ~

jobs:
  matrix-adapters:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.create-matrix.outputs.result }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - run: yarn

      - name: Generate job matrix
        id: create-matrix
        run: yarn generate:gha:matrix

  build:
    runs-on: ubuntu-latest
    needs: [matrix-adapters]
    name: Build (${{ matrix.adapter.name }})
    strategy:
      matrix: ${{fromJson(needs.matrix-adapters.outputs.matrix)}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Check whether generic adapter changed
        id: adapter_did_change
        run: ./.github/scripts/isadapterchange.sh ${{ matrix.adapter.shortName }}

      - uses: actions/setup-node@v2
        if: steps.adapter_did_change.outputs.result == 'true'
        with:
          node-version: '16.x'

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install yarn deps
        if: steps.adapter_did_change.outputs.result == 'true'
        run: yarn

      - name: Generate docker-compose file
        if: steps.adapter_did_change.outputs.result == 'true'
        run: yarn generate:docker-compose

      - name: Update dockerignore
        if: steps.adapter_did_change.outputs.result == 'true'
        run: |
          mv .dockerignore.prod .dockerignore
          echo '!packages/${{ matrix.adapter.shortName }}' >> .dockerignore

      - name: Build docker image
        if: steps.adapter_did_change.outputs.result == 'true'
        env:
          DOCKER_BUILDKIT: 1
        run: docker-compose -f docker-compose.generated.yaml build ${{ matrix.adapter.name }}
