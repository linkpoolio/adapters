"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.wsRedactPaths = exports.getWSConfig = void 0;
const util_1 = require("../../util");
/** Load WSConfig from environment variables */
const getWSConfig = (endpoint, context) => ({
    enabled: util_1.parseBool(util_1.getEnv('WS_ENABLED', undefined, context)),
    connectionInfo: {
        key: `${util_1.getEnv('WS_CONNECTION_KEY')}-${endpoint}`,
    },
    connectionLimit: Number(util_1.getEnv('WS_CONNECTION_LIMIT')),
    connectionTTL: Number(util_1.getEnv('WS_CONNECTION_TTL')),
    connectionRetryLimit: Number(util_1.getEnv('WS_CONNECTION_RETRY_LIMIT')),
    connectionRetryDelay: Number(util_1.getEnv('WS_CONNECTION_RETRY_DELAY')),
    subscriptionLimit: Number(util_1.getEnv('WS_SUBSCRIPTION_LIMIT')),
    subscriptionTTL: Number(util_1.getEnv('WS_SUBSCRIPTION_TTL')),
    subscriptionUnresponsiveTTL: Number(util_1.getEnv('WS_SUBSCRIPTION_UNRESPONSIVE_TTL')),
    subscriptionPriorityList: (util_1.getEnv('WS_SUBSCRIPTION_PRIORITY_LIST') || []),
    defaultHeartbeatIntervalInMS: Number(util_1.getEnv('DEFAULT_WS_HEARTBEAT_INTERVAL')),
});
exports.getWSConfig = getWSConfig;
exports.wsRedactPaths = [
    'payload.wsHandler.connection.protocol.query.api_key',
    'payload.connectionInfo.url',
    'payload.wsHandler.connection.url',
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9taWRkbGV3YXJlL3dzL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxxQ0FBOEM7QUFHOUMsK0NBQStDO0FBQ3hDLE1BQU0sV0FBVyxHQUFHLENBQUMsUUFBaUIsRUFBRSxPQUF3QixFQUFZLEVBQUUsQ0FBQyxDQUFDO0lBQ3JGLE9BQU8sRUFBRSxnQkFBUyxDQUFDLGFBQU0sQ0FBQyxZQUFZLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBRTVELGNBQWMsRUFBRTtRQUNkLEdBQUcsRUFBRSxHQUFHLGFBQU0sQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLFFBQVEsRUFBRTtLQUNsRDtJQUNELGVBQWUsRUFBRSxNQUFNLENBQUMsYUFBTSxDQUFDLHFCQUFxQixDQUFDLENBQUM7SUFDdEQsYUFBYSxFQUFFLE1BQU0sQ0FBQyxhQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUNsRCxvQkFBb0IsRUFBRSxNQUFNLENBQUMsYUFBTSxDQUFDLDJCQUEyQixDQUFDLENBQUM7SUFDakUsb0JBQW9CLEVBQUUsTUFBTSxDQUFDLGFBQU0sQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO0lBQ2pFLGlCQUFpQixFQUFFLE1BQU0sQ0FBQyxhQUFNLENBQUMsdUJBQXVCLENBQUMsQ0FBQztJQUMxRCxlQUFlLEVBQUUsTUFBTSxDQUFDLGFBQU0sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0lBQ3RELDJCQUEyQixFQUFFLE1BQU0sQ0FBQyxhQUFNLENBQUMsa0NBQWtDLENBQUMsQ0FBQztJQUMvRSx3QkFBd0IsRUFBRSxDQUFDLGFBQU0sQ0FBQywrQkFBK0IsQ0FBQyxJQUFJLEVBQUUsQ0FBa0I7SUFDMUYsNEJBQTRCLEVBQUUsTUFBTSxDQUFDLGFBQU0sQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO0NBQzlFLENBQUMsQ0FBQTtBQWZXLFFBQUEsV0FBVyxlQWV0QjtBQUVXLFFBQUEsYUFBYSxHQUFHO0lBQzNCLHFEQUFxRDtJQUNyRCw0QkFBNEI7SUFDNUIsa0NBQWtDO0NBQ25DLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZGFwdGVyQ29udGV4dCB9IGZyb20gJ0BjaGFpbmxpbmsvdHlwZXMnXG5pbXBvcnQgeyBnZXRFbnYsIHBhcnNlQm9vbCB9IGZyb20gJy4uLy4uL3V0aWwnXG5pbXBvcnQgeyBXU0NvbmZpZyB9IGZyb20gJy4vdHlwZXMnXG5cbi8qKiBMb2FkIFdTQ29uZmlnIGZyb20gZW52aXJvbm1lbnQgdmFyaWFibGVzICovXG5leHBvcnQgY29uc3QgZ2V0V1NDb25maWcgPSAoZW5kcG9pbnQ/OiBzdHJpbmcsIGNvbnRleHQ/OiBBZGFwdGVyQ29udGV4dCk6IFdTQ29uZmlnID0+ICh7XG4gIGVuYWJsZWQ6IHBhcnNlQm9vbChnZXRFbnYoJ1dTX0VOQUJMRUQnLCB1bmRlZmluZWQsIGNvbnRleHQpKSxcblxuICBjb25uZWN0aW9uSW5mbzoge1xuICAgIGtleTogYCR7Z2V0RW52KCdXU19DT05ORUNUSU9OX0tFWScpfS0ke2VuZHBvaW50fWAsXG4gIH0sXG4gIGNvbm5lY3Rpb25MaW1pdDogTnVtYmVyKGdldEVudignV1NfQ09OTkVDVElPTl9MSU1JVCcpKSxcbiAgY29ubmVjdGlvblRUTDogTnVtYmVyKGdldEVudignV1NfQ09OTkVDVElPTl9UVEwnKSksXG4gIGNvbm5lY3Rpb25SZXRyeUxpbWl0OiBOdW1iZXIoZ2V0RW52KCdXU19DT05ORUNUSU9OX1JFVFJZX0xJTUlUJykpLFxuICBjb25uZWN0aW9uUmV0cnlEZWxheTogTnVtYmVyKGdldEVudignV1NfQ09OTkVDVElPTl9SRVRSWV9ERUxBWScpKSxcbiAgc3Vic2NyaXB0aW9uTGltaXQ6IE51bWJlcihnZXRFbnYoJ1dTX1NVQlNDUklQVElPTl9MSU1JVCcpKSxcbiAgc3Vic2NyaXB0aW9uVFRMOiBOdW1iZXIoZ2V0RW52KCdXU19TVUJTQ1JJUFRJT05fVFRMJykpLFxuICBzdWJzY3JpcHRpb25VbnJlc3BvbnNpdmVUVEw6IE51bWJlcihnZXRFbnYoJ1dTX1NVQlNDUklQVElPTl9VTlJFU1BPTlNJVkVfVFRMJykpLFxuICBzdWJzY3JpcHRpb25Qcmlvcml0eUxpc3Q6IChnZXRFbnYoJ1dTX1NVQlNDUklQVElPTl9QUklPUklUWV9MSVNUJykgfHwgW10pIGFzIEFycmF5PHN0cmluZz4sIC8vIFRPRE86IGxvYWQgYXJyYXksXG4gIGRlZmF1bHRIZWFydGJlYXRJbnRlcnZhbEluTVM6IE51bWJlcihnZXRFbnYoJ0RFRkFVTFRfV1NfSEVBUlRCRUFUX0lOVEVSVkFMJykpLFxufSlcblxuZXhwb3J0IGNvbnN0IHdzUmVkYWN0UGF0aHMgPSBbXG4gICdwYXlsb2FkLndzSGFuZGxlci5jb25uZWN0aW9uLnByb3RvY29sLnF1ZXJ5LmFwaV9rZXknLFxuICAncGF5bG9hZC5jb25uZWN0aW9uSW5mby51cmwnLFxuICAncGF5bG9hZC53c0hhbmRsZXIuY29ubmVjdGlvbi51cmwnLFxuXVxuIl19