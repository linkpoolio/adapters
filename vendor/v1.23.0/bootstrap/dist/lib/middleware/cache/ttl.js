"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTTL = exports.getMaxAgeOverride = exports.getRateLimitMaxAge = exports.WARNING_MAX_AGE = void 0;
const modules_1 = require("../../modules");
const _1 = require(".");
exports.WARNING_MAX_AGE = 1000 * 60 * 2; // 2 minutes
const getRateLimitMaxAge = (adapterRequest, options = _1.defaultOptions()) => {
    if (!adapterRequest || !adapterRequest.rateLimitMaxAge)
        return;
    if (isNaN(adapterRequest.rateLimitMaxAge))
        return;
    const feedId = adapterRequest?.metricsMeta?.feedId;
    const maxAge = adapterRequest.rateLimitMaxAge;
    if (maxAge > exports.WARNING_MAX_AGE)
        modules_1.logger.trace(`${feedId && feedId[0] !== '{' ? `[${feedId}]` : ''} Cache: High data staleness - TTL of ${maxAge / 1000 / 60} minutes`, adapterRequest);
    if (maxAge > options.cacheImplOptions.maxAge) {
        modules_1.logger.warn(`${feedId && feedId[0] !== '{' ? `[${feedId}]` : ''} Cache: Calculated TTL exceeds maximum TTL, using maximum of ${options.cacheImplOptions.maxAge / 1000 / 60} minutes`, adapterRequest);
        return options.cacheImplOptions.maxAge;
    }
    return maxAge;
};
exports.getRateLimitMaxAge = getRateLimitMaxAge;
const getMaxAgeOverride = (adapterRequest) => {
    if (!adapterRequest || !adapterRequest.data)
        return;
    if (isNaN(parseInt(adapterRequest.data.maxAge)))
        return;
    return parseInt(adapterRequest.data.maxAge);
};
exports.getMaxAgeOverride = getMaxAgeOverride;
const getTTL = (adapterRequest, options = _1.defaultOptions()) => {
    const TTL = exports.getMaxAgeOverride(adapterRequest) || exports.getRateLimitMaxAge(adapterRequest);
    if (!TTL || TTL < options.minimumAge)
        return options.minimumAge;
    return TTL;
};
exports.getTTL = getTTL;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHRsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9taWRkbGV3YXJlL2NhY2hlL3R0bC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwyQ0FBc0M7QUFFdEMsd0JBQWdEO0FBRW5DLFFBQUEsZUFBZSxHQUFHLElBQUksR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFBLENBQUMsWUFBWTtBQUVsRCxNQUFNLGtCQUFrQixHQUFHLENBQ2hDLGNBQThCLEVBQzlCLFVBQXdCLGlCQUFjLEVBQUUsRUFDcEIsRUFBRTtJQUN0QixJQUFJLENBQUMsY0FBYyxJQUFJLENBQUMsY0FBYyxDQUFDLGVBQWU7UUFBRSxPQUFNO0lBQzlELElBQUksS0FBSyxDQUFDLGNBQWMsQ0FBQyxlQUFlLENBQUM7UUFBRSxPQUFNO0lBQ2pELE1BQU0sTUFBTSxHQUFHLGNBQWMsRUFBRSxXQUFXLEVBQUUsTUFBTSxDQUFBO0lBQ2xELE1BQU0sTUFBTSxHQUFHLGNBQWMsQ0FBQyxlQUFlLENBQUE7SUFDN0MsSUFBSSxNQUFNLEdBQUcsdUJBQWU7UUFDMUIsZ0JBQU0sQ0FBQyxLQUFLLENBQ1YsR0FBRyxNQUFNLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSx3Q0FDakQsTUFBTSxHQUFHLElBQUksR0FBRyxFQUNsQixVQUFVLEVBQ1YsY0FBYyxDQUNmLENBQUE7SUFDSCxJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFO1FBQzVDLGdCQUFNLENBQUMsSUFBSSxDQUNULEdBQ0UsTUFBTSxJQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQ2hELGdFQUNFLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLEdBQUcsSUFBSSxHQUFHLEVBQzNDLFVBQVUsRUFDVixjQUFjLENBQ2YsQ0FBQTtRQUNELE9BQU8sT0FBTyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQTtLQUN2QztJQUNELE9BQU8sTUFBTSxDQUFBO0FBQ2YsQ0FBQyxDQUFBO0FBM0JZLFFBQUEsa0JBQWtCLHNCQTJCOUI7QUFFTSxNQUFNLGlCQUFpQixHQUFHLENBQUMsY0FBOEIsRUFBc0IsRUFBRTtJQUN0RixJQUFJLENBQUMsY0FBYyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUk7UUFBRSxPQUFNO0lBQ25ELElBQUksS0FBSyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQUUsT0FBTTtJQUN2RCxPQUFPLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFBO0FBQzdDLENBQUMsQ0FBQTtBQUpZLFFBQUEsaUJBQWlCLHFCQUk3QjtBQUVNLE1BQU0sTUFBTSxHQUFHLENBQ3BCLGNBQThCLEVBQzlCLFVBQXdCLGlCQUFjLEVBQUUsRUFDaEMsRUFBRTtJQUNWLE1BQU0sR0FBRyxHQUFHLHlCQUFpQixDQUFDLGNBQWMsQ0FBQyxJQUFJLDBCQUFrQixDQUFDLGNBQWMsQ0FBQyxDQUFBO0lBQ25GLElBQUksQ0FBQyxHQUFHLElBQUksR0FBRyxHQUFHLE9BQU8sQ0FBQyxVQUFVO1FBQUUsT0FBTyxPQUFPLENBQUMsVUFBVSxDQUFBO0lBQy9ELE9BQU8sR0FBRyxDQUFBO0FBQ1osQ0FBQyxDQUFBO0FBUFksUUFBQSxNQUFNLFVBT2xCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnLi4vLi4vbW9kdWxlcydcbmltcG9ydCB7IEFkYXB0ZXJSZXF1ZXN0IH0gZnJvbSAnQGNoYWlubGluay90eXBlcydcbmltcG9ydCB7IENhY2hlT3B0aW9ucywgZGVmYXVsdE9wdGlvbnMgfSBmcm9tICcuJ1xuXG5leHBvcnQgY29uc3QgV0FSTklOR19NQVhfQUdFID0gMTAwMCAqIDYwICogMiAvLyAyIG1pbnV0ZXNcblxuZXhwb3J0IGNvbnN0IGdldFJhdGVMaW1pdE1heEFnZSA9IChcbiAgYWRhcHRlclJlcXVlc3Q6IEFkYXB0ZXJSZXF1ZXN0LFxuICBvcHRpb25zOiBDYWNoZU9wdGlvbnMgPSBkZWZhdWx0T3B0aW9ucygpLFxuKTogbnVtYmVyIHwgdW5kZWZpbmVkID0+IHtcbiAgaWYgKCFhZGFwdGVyUmVxdWVzdCB8fCAhYWRhcHRlclJlcXVlc3QucmF0ZUxpbWl0TWF4QWdlKSByZXR1cm5cbiAgaWYgKGlzTmFOKGFkYXB0ZXJSZXF1ZXN0LnJhdGVMaW1pdE1heEFnZSkpIHJldHVyblxuICBjb25zdCBmZWVkSWQgPSBhZGFwdGVyUmVxdWVzdD8ubWV0cmljc01ldGE/LmZlZWRJZFxuICBjb25zdCBtYXhBZ2UgPSBhZGFwdGVyUmVxdWVzdC5yYXRlTGltaXRNYXhBZ2VcbiAgaWYgKG1heEFnZSA+IFdBUk5JTkdfTUFYX0FHRSlcbiAgICBsb2dnZXIudHJhY2UoXG4gICAgICBgJHtmZWVkSWQgJiYgZmVlZElkWzBdICE9PSAneycgPyBgWyR7ZmVlZElkfV1gIDogJyd9IENhY2hlOiBIaWdoIGRhdGEgc3RhbGVuZXNzIC0gVFRMIG9mICR7XG4gICAgICAgIG1heEFnZSAvIDEwMDAgLyA2MFxuICAgICAgfSBtaW51dGVzYCxcbiAgICAgIGFkYXB0ZXJSZXF1ZXN0LFxuICAgIClcbiAgaWYgKG1heEFnZSA+IG9wdGlvbnMuY2FjaGVJbXBsT3B0aW9ucy5tYXhBZ2UpIHtcbiAgICBsb2dnZXIud2FybihcbiAgICAgIGAke1xuICAgICAgICBmZWVkSWQgJiYgZmVlZElkWzBdICE9PSAneycgPyBgWyR7ZmVlZElkfV1gIDogJydcbiAgICAgIH0gQ2FjaGU6IENhbGN1bGF0ZWQgVFRMIGV4Y2VlZHMgbWF4aW11bSBUVEwsIHVzaW5nIG1heGltdW0gb2YgJHtcbiAgICAgICAgb3B0aW9ucy5jYWNoZUltcGxPcHRpb25zLm1heEFnZSAvIDEwMDAgLyA2MFxuICAgICAgfSBtaW51dGVzYCxcbiAgICAgIGFkYXB0ZXJSZXF1ZXN0LFxuICAgIClcbiAgICByZXR1cm4gb3B0aW9ucy5jYWNoZUltcGxPcHRpb25zLm1heEFnZVxuICB9XG4gIHJldHVybiBtYXhBZ2Vcbn1cblxuZXhwb3J0IGNvbnN0IGdldE1heEFnZU92ZXJyaWRlID0gKGFkYXB0ZXJSZXF1ZXN0OiBBZGFwdGVyUmVxdWVzdCk6IG51bWJlciB8IHVuZGVmaW5lZCA9PiB7XG4gIGlmICghYWRhcHRlclJlcXVlc3QgfHwgIWFkYXB0ZXJSZXF1ZXN0LmRhdGEpIHJldHVyblxuICBpZiAoaXNOYU4ocGFyc2VJbnQoYWRhcHRlclJlcXVlc3QuZGF0YS5tYXhBZ2UpKSkgcmV0dXJuXG4gIHJldHVybiBwYXJzZUludChhZGFwdGVyUmVxdWVzdC5kYXRhLm1heEFnZSlcbn1cblxuZXhwb3J0IGNvbnN0IGdldFRUTCA9IChcbiAgYWRhcHRlclJlcXVlc3Q6IEFkYXB0ZXJSZXF1ZXN0LFxuICBvcHRpb25zOiBDYWNoZU9wdGlvbnMgPSBkZWZhdWx0T3B0aW9ucygpLFxuKTogbnVtYmVyID0+IHtcbiAgY29uc3QgVFRMID0gZ2V0TWF4QWdlT3ZlcnJpZGUoYWRhcHRlclJlcXVlc3QpIHx8IGdldFJhdGVMaW1pdE1heEFnZShhZGFwdGVyUmVxdWVzdClcbiAgaWYgKCFUVEwgfHwgVFRMIDwgb3B0aW9ucy5taW5pbXVtQWdlKSByZXR1cm4gb3B0aW9ucy5taW5pbXVtQWdlXG4gIHJldHVybiBUVExcbn1cbiJdfQ==